extends layout

block scripts

  script(src='/javascripts/taffy-min.js')
  script(src='/javascripts/jsonpath.js')

  script.
    var utils = new commons();
    var cards_db = TAFFY(!{cards});
    
    $(document).on('click', '.cmtedit', function (e) {
      TBox(this);
    });
    
    $(document).on('click', '.header', function (e) {
      $header = $(this);
      $content = $header.next();
      $content.slideToggle(500, function () {
        $header.text(function () {
          return $content.is(":visible") ? "-" : "+";
        });
      });
    });
    
    function TBox(obj) {
      var id = $(obj).attr("id");
      var tid = id.replace("cmt_edit_", "cmt_tedit_");
      var input = $('<input />', { 'type': 'text', 'name': 'n' + tid, 'id': tid, 'class': 'text_box', 'value': $(obj).html() });
      $(obj).parent().append(input);
      $(obj).remove();
      $(input).focusout(function() {
        RBox(this);
      });
      input.focus();
    }
    
    function RBox(obj) {
      var id_ = $(obj).attr("id");
      var tid = id_.replace("cmt_tedit_", "cmt_edit_");
      var input = $('<p />', { 'id': tid, 'class': 'cmtedit', 'html': $(obj).val() });
      $(obj).parent().append(input);
      $(obj).remove();
      var idnoprefix = id_.replace("cmt_tedit_", "");
      var id = idnoprefix.substring(0,idnoprefix.indexOf("_"));
      var field = idnoprefix.substring(idnoprefix.indexOf("_")+1);
      field = field.replace("_", ".");
      save(id, field, $(obj).val());
    }
    
    function save(id, field, value) {        
      var query = JSON.parse('{"cardId": "' + id + '"}');
      var record = cards_db(query).get()[0];
      utils.setValue(record, field, value);
      cards_db(query).update(record);
      var card = JSON.stringify(record);
      $.post( "/db/upload", { 'card': card } );
    }
   
block content
  h1= title
   
  - function traverseJSONPath(path_, json_) { 
  -   return JSONPath({path: path_, json: (utils.isArray(json_) ? json_[0] : json_)})
  - };
  
  mixin table(rows, fields)
    div(class="datagrid")
      table
        +header(fields)
        +body(rows, fields)
      
  mixin header(fields)
    thead
      tr
        - var oldField
        - var firstToken
        each field, i in fields
          if field !== undefined
            - firstToken = utils.replaceAll(field, '[*]', '').split('.')[0]
            if field.includes('[*]')
              if (oldField !== firstToken)
                th !{firstToken}
            else 
              th !{field}
          - oldField = firstToken
          
  mixin body(rows, fields)
    tbody
      each item, i in rows
        tr(class=((i % 2 === 0  || i === 0)?"alt":""))
          each field in fields
            - var value 
            if field === "___id"
              td #{value=item.___id}
            else            
              - var firstToken = utils.replaceAll(field, '[*]', '').split('.')[0]
              if field.includes('[*]')
                if (oldField !== firstToken)
                  td
                    - value = traverseJSONPath('$.' + firstToken, item);
                    - var arr = utils.isArray(value)
                    - var innerFields = utils.traverse(arr ? value[0] : value, false)
                    if arr
                      +printArray(innerValue, innerFields, value)
                    else
                      +table(value, innerFields)
              else
                td
                  - var convertedField = field.replace(".","_")
                  - value = JSONPath({path: '$.' + field, json: item})
                  p(id="cmt_edit_" + item['cardId'] + "_" + convertedField, class="cmtedit") #{value}
            - oldField = firstToken

  mixin printArray(rows, fields, value)
    div(class="container")
      div(class="header")
        span(class="header") +
      div(class="content")
        div(class="datagrid")
          table
            +header(fields)
            each innerValue in value
              +body(innerValue, fields)

  +table(rows, fields)