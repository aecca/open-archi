swagger: '2.0'
info:
  description: Operations can be done with OpenArchi models.
  version: 1.0.0
  title: OpenArchi API
  contact:
    email: alejandromanuel.mendez.aragua@bbva.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: "@HOST@"
basePath: "/open-archi/api"
tags:
- name: models
  description: Models
- name: architecture
  description: Architecture
- name: diagrams
  description: Diagrams
schemes:
- http
- https
paths:
  "/models":
    get:
      tags:
      - models
      summary: Finds models
      description: This service supports query by using RSQL expressions
      operationId: get-models
      produces:
      - application/json
      parameters:
      - name: "$filter"
        in: query
        description: Filter models according to an RSQL expression
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Model"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    post:
      tags:
      - models
      summary: Add a new model
      description: ''
      operationId: add-model
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Model object that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/Model_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models
  "/models/{model-id}":
    get:
      tags:
      - models
      summary: Find a model by ID
      description: Returns a single model
      operationId: get-model-by-id
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to return
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Model"
        '400':
          description: Invalid ID supplied
        '404':
          description: Model not found
      security:
      - api_key: []
securityDefinitions:
  openarchi_auth:
    type: oauth2
    authorizationUrl: https://@HOST@/oauth/dialog
    flow: implicit
    scopes:
      write:model: modify a model
      read:models: read your models
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Model:
    description: Model object
    allOf:
    - $ref: "#/definitions/Taggable"
    - type: object
      properties:
        name:
          type: string
          description: Model name
        kind:
          type: string
          description: Type of model
          enum:
          - ARCHITECTURAL_MODEL
          - FLOWCHART_MODEL
          - SEQUENCE_MODEL
          - GANTT_MODEL
          - ENTITY_RELATIONSHIP_MODEL
          - UML_CLASS_MODEL
          - BPM_MODEL
          - ARCHITECTURAL
          - FLOWCHART
          - SEQUENCE
          - GANTT
          - ENTITY_RELATIONSHIP
          - UML_CLASS
          - FEATURE
          - BPM
        description:
          type: string
          description: Long description of model
        location:
          $ref: "#/definitions/Point"
          description: Long description of model
        parent:
          $ref: "#/definitions/CompositeElement"
          description: Long description of model
        children:
          type: array
          description: Children of the model
          items:
            $ref: "#/definitions/CompositeElement"
        shape:
          $ref: "#/definitions/Shape"
          description: Long description of model
        relationships:
          type: array
          description: Relationships of the model
          items:
            $ref: "#/definitions/Relationship"
        metaData:
          $ref: "#/definitions/MetaData"
          description: Meta data associated with the model
        url:
          type: string
          description: Url for the physical access to the of model
        properties:
          type: object
          additionalProperties:
            type: string
        featuresLinks:
          type: array
          description: Links to the features that conforms the model
          items:
            $ref: "#/definitions/CompositeElement"
      required:
      - name
      - kind
  Model_Create:
    description: Model object
    allOf:
    - $ref: "#/definitions/Taggable_Create"
    - type: object
      properties:
        name:
          type: string
          description: Model name
        kind:
          type: string
          description: Type of model
          enum:
          - ARCHITECTURAL_MODEL
          - FLOWCHART_MODEL
          - SEQUENCE_MODEL
          - GANTT_MODEL
          - ENTITY_RELATIONSHIP_MODEL
          - UML_CLASS_MODEL
          - BPM_MODEL
          - ARCHITECTURAL
          - FLOWCHART
          - SEQUENCE
          - GANTT
          - ENTITY_RELATIONSHIP
          - UML_CLASS
          - FEATURE
          - BPM
        description:
          type: string
          description: Long description of model
        location:
          $ref: "#/definitions/Point"
          description: Long description of model
        parent:
          $ref: "#/definitions/CompositeElement"
          description: Long description of model
        children:
          type: array
          description: Children of the model
          items:
            $ref: "#/definitions/CompositeElement"
        shape:
          $ref: "#/definitions/Shape"
          description: Long description of model
        relationships:
          type: array
          description: Relationships of the model
          items:
            $ref: "#/definitions/Relationship_Create"
        metaData:
          $ref: "#/definitions/MetaData_Create"
          description: Meta data associated with the model
        url:
          type: string
          description: Url for the physical access to the of model
        properties:
          type: object
          additionalProperties:
            type: string
        featuresLinks:
          type: array
          description: Links to the features that conforms the model
          items:
            $ref: "#/definitions/CompositeElement"
      required:
      - name
      - kind
  Point:
    type: object
    description: Coordinates on which the model is located
    properties:
      x:
        type: string
        format: double
        description: Relative x coordinate of the point on which the model is located
      y:
        type: string
        format: double
        description: Relative y coordinate of the point on which the model is located
      z:
        type: string
        format: double
        description: Relative z coordinate of the point on which the model is located
    required:
    - x
    - y
  CompositeElement:
    type: object
    description: A reference to a taggable element
    properties:
      id:
        type: string
        description: Composite element identifier
      type:
        type: string
        description: Referenced element type
        enum:
        - ARCHITECTURAL_MODEL
        - FLOWCHART_MODEL
        - SEQUENCE_MODEL
        - GANTT_MODEL
        - ENTITY_RELATIONSHIP_MODEL
        - UML_CLASS_MODEL
        - BPM_MODEL
        - ARCHITECTURAL
        - FLOWCHART
        - SEQUENCE
        - GANTT
        - ENTITY_RELATIONSHIP
        - UML_CLASS
        - FEATURE
        - COMPONENT
        - CONTAINER
        - DEPLOYMENT
        - BPM
      link:
        type: string
        description: Link to the referenced element
    required:
    - id
    - type
  Shape:
    type: object
    description: Concrete shape that univocally identify o model
    properties:
      id:
        type: string
        description: Shape identifier
      type:
        type: string
        description: Shape type
        enum:
        - PERSON
        - ROUNDED_BOX
        - BOX
        - DIAMOND
        - CIRCLE
    required:
    - id
    - type
  MetaData_Create:
    description: MetaData object
    allOf:
    - $ref: "#/definitions/BaseEntity_Create"
    - type: object
      properties:
        responsibles:
          type: array
          description: Responsibles of the model
          items:
            $ref: "#/definitions/Responsible_Create"
        collaborators:
          type: array
          description: Collaborators of the model
          items:
            $ref: "#/definitions/Responsible_Create"
        relatedWith:
          type: array
          description: Models related to the current model
          items:
            $ref: "#/definitions/Taggable_Create"
        usedIn:
          type: array
          description: Models used by the current model
          items:
            $ref: "#/definitions/Taggable_Create"
        views:
          type: array
          description: Accepted views for representing the model
          items:
            $ref: "#/definitions/View_Create"
      required:
      - id
      - type
  MetaData:
    description: MetaData object
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        responsibles:
          type: array
          description: Responsibles of the model
          items:
            $ref: "#/definitions/Responsible"
        collaborators:
          type: array
          description: Collaborators of the model
          items:
            $ref: "#/definitions/Responsible"
        relatedWith:
          type: array
          description: Models related to the current model
          items:
            $ref: "#/definitions/Taggable"
        usedIn:
          type: array
          description: Models used by the current model
          items:
            $ref: "#/definitions/Taggable"
        views:
          type: array
          description: Accepted views for representing the model
          items:
            $ref: "#/definitions/View"
      required:
      - id
      - type
  Taggable:
    description: Instantiable model
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        tags:
          type: array
          description: Tags of the model
          items:
            type: string
      required:
      - id
  Taggable_Create:
    description: Instantiable model
    allOf:
    - $ref: "#/definitions/BaseEntity_Create"
    - type: object
      properties:
        tags:
          type: array
          description: Tags of the model
          items:
            type: string
  BaseEntity:
    type: object
    description: Basic entity info for managing a model
    properties:
      id:
        type: string
        description: Model identifier
      meta:
        $ref: "#/definitions/MetaInfo"
        description: Meta info related to the model
    required:
    - id
    - meta
  BaseEntity_Create:
    type: object
    description: Basic entity info for managing a model
    properties:
      meta:
        $ref: "#/definitions/MetaInfo_Create"
        description: Meta info related to the model
  Relationship:
    description: Relationship between model objects
    allOf:
    - $ref: "#/definitions/Taggable"
    - type: object
      properties:
        source:
          $ref: "#/definitions/Taggable"
          description: Model acting as source of the relationship
        sourceId:
          type: string
          description: Long description of model
        destination:
          $ref: "#/definitions/Taggable"
          description: Model acting as destination of the relationship
        destinationId:
          type: string
          description: Identifier of the model acting as destination of the relationship
        description:
          type: string
          description: Long description of the relationship
        sourcePort:
          type: string
          description: Port of the model acting as source of the relationship
        destinationPort:
          type: string
          description: Port of the model acting as destination of the relationship
      required:
      - sourceId
      - destinationId
  Relationship_Create:
    type: object
    description: Relationship between model objects
    allOf:
    - $ref: "#/definitions/Taggable_Create"
    - properties:
        sourceId:
          type: string
          description: Identifier of the model acting as source of the relationship
        destinationId:
          type: string
          description: Identifier of the model acting as destination of the relationship
        description:
          type: string
          description: Long description of the relationship
        sourcePort:
          type: string
          description: Port of the model acting as source of the relationship
        destinationPort:
          type: string
          description: Port of the model acting as destination of the relationship
      required:
      - sourceId
      - destinationId
  Responsible:
    description: Person that is responsible of a specific component of a model
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        organizationUnit:
          type: string
          description: Organization unit to which the responsible belongs to
        responsible:
          $ref: "#/definitions/Person"
          description: Person that is responsible of a specific component of a model
      required:
      - organizationUnit
      - responsible
  Responsible_Create:
    description: Person that is responsible of a specific component of a model
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        organizationUnit:
          type: string
          description: Organization unit to which the responsible belongs to
        responsible:
          $ref: "#/definitions/Person_Create"
          description: Person that is responsible of a specific component of a model
      required:
      - organizationUnit
      - responsible
  Person:
    description: Person
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        names:
          type: string
          description: Names of the person
        lastNames:
          type: string
          description: Lastname(s) of the person
      required:
      - names
      - lastNames
  Person_Create:
    description: Person
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        names:
          type: string
          description: Names of the person
        lastNames:
          type: string
          description: Lastname(s) of the person
      required:
      - names
      - lastNames
  View:
    description: View of the model
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        name:
          type: string
          description: Name of the view
      required:
      - name
  View_Create:
    description: View of the model
    allOf:
    - $ref: "#/definitions/BaseEntity_Create"
    - type: object
      properties:
        name:
          type: string
          description: Name of the view
      required:
      - name
  MetaInfo:
    type: object
    description: Meta info for any object
    properties:
      id:
        type: string
        description: Meta info identifier
      version:
        $ref: "#/definitions/Version"
        description: Version of the object
      createdBy:
        $ref: "#/definitions/Account"
        description: Account that creates the object
      modifiedBy:
        $ref: "#/definitions/Account"
        description: Account that modifies the object
      created:
        type: string
        format: date-time
        description: Full date of creation of the object
      modified:
        type: string
        format: date-time
        description: Full date of modification of the object
    required:
    - id
    - version
    - createdBy
    - modifiedBy
  MetaInfo_Create:
    type: object
    description: Meta info for any object
    properties:
      version:
        $ref: "#/definitions/Version_Create"
        description: Version of the object
      createdBy:
        $ref: "#/definitions/Account_Create"
        description: Account that creates the object
      modifiedBy:
        $ref: "#/definitions/Account_Create"
        description: Account that modifies the object
      created:
        type: string
        format: date-time
        description: Full date of creation of the object
      modified:
        type: string
        format: date-time
        description: Full date of modification of the object
    required:
    - version
    - createdBy
  Version:
    type: object
    description: Version
    properties:
      id:
        type: string
        description: Version identifier
      major:
        type: integer
        format: int32
        description: Major part of the version
      minor:
        type: integer
        format: int32
        description: Minor part of the version
      build:
        type: integer
        format: int32
        description: Build part of the version
    required:
    - id
    - major
    - minor
    - build
  Version_Create:
    type: object
    description: Version
    properties:
      major:
        type: integer
        format: int32
        description: Major part of the version
      minor:
        type: integer
        format: int32
        description: Minor part of the version
      build:
        type: integer
        format: int32
        description: Build part of the version
    required:
    - major
    - minor
    - build
  Account:
    description: Account
    type: object
    properties:
      id:
        type: string
        description: Account identifier
      email:
        type: string
        description: Email of the account
      login:
        type: string
        description: Login
      password:
        type: string
        description: Password of the account
      firstAccess:
        type: boolean
        description: Indicator for showing whether this is the first access to the account or not
  Account_Create:
    description: Account
    type: object
    properties:
      email:
        type: string
        description: Email of the account
      login:
        type: string
        description: Login
      password:
        type: string
        description: Password of the account