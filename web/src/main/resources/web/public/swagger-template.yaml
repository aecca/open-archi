swagger: '2.0'
info:
  description: Operations can be done with OpenArchi models.
  version: 1.0.0
  title: OpenArchi API
  contact:
    email: alejandromanuel.mendez.aragua@bbva.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: "@HOST@"
basePath: "/open-archi/api"
tags:
- name: Models
  description: Set of functionalities related to model in an agnostically manner to its types.
- name: Diagrams
  description: Functionalities for managing models of a specifically kind of diagram
schemes:
- http
- https
paths:
  "/models":
    options:
      tags:
      - Models
      summary: Shows options for models object
      operationId: options-models
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
            - "$ref": "#/definitions/Options_Get_Collection"
            - "$ref": "#/definitions/Options_Post"
    get:
      tags:
      - Models
      summary: Finds models
      description: This service supports query by using RSQL expressions
      operationId: get-models
      produces:
      - application/json
      parameters:
      - name: "$filter"
        in: query
        description: Filter models according to an RSQL expression
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Model"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    post:
      tags:
      - Models
      summary: Add a new model
      description: ''
      operationId: add-model
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Model object that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/Model_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models
  "/models/{model-id}":
    options:
      tags:
      - Models
      summary: Shows options for a specific model object
      operationId: options-model
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to check its options
        default: model-id
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Options_Get"
    get:
      tags:
      - Models
      summary: Find a model by ID
      description: Returns a single model
      operationId: get-model-by-id
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to return
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Model"
        '400':
          description: Invalid ID supplied
        '404':
          description: Model not found
      security:
      - api_key: []
  "/models/{model-id}/children":
    options:
      tags:
      - Models
      summary: Shows options for the children objects of a specific model
      operationId: options-model-children
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to check its children options
        default: model-id
        type: string
      responses:
        '200':
          description: OK
          schema:
            allOf:
            - "$ref": "#/definitions/Options_Get_Collection"
            - "$ref": "#/definitions/Options_Put"
    get:
      tags:
      - Models
      summary: Finds children of a model
      description: This service supports query by using RSQL expressions
      operationId: get-model-children
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to return
        required: true
        type: string
      - name: "$filter"
        in: query
        description: Filter children of a model according to an RSQL expression
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/CompositeElement"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    put:
      tags:
      - Models
      summary: Add a new child to the model
      description: If the child object does not exists previously, it will be created.
      operationId: add-model-child
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to return
        required: true
        type: string
      - in: body
        name: body
        description: Model object that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/CompositeElement_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models
  "/models/{model-id}/parent":
    options:
      tags:
      - Models
      summary: Shows options for the parent object of a specific model
      operationId: options-model-parent
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to check its parent options
        default: model-id
        type: string
      responses:
        '200':
          description: OK
          schema:
            allOf:
            - "$ref": "#/definitions/Options_Get"
            - "$ref": "#/definitions/Options_Post"
    get:
      tags:
      - Models
      summary: Find the parent of a model
      description: Gets the full info related to the parent of the model
      operationId: get-model-parent
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to return
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Model"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    post:
      tags:
      - Models
      summary: Add a parent to the current model
      description: Relates an existing model as a parent of the current one. If parent model does not exists an error will occur. Only model parent id is required
      operationId: add-model-parent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to return
        required: true
        type: string
      - in: body
        name: body
        description: Model object that needs to be added as a parent of the current model
        required: true
        schema:
          "$ref": "#/definitions/Model_Parent_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models
  "/diagrams/architectures":
    options:
      tags:
      - Diagrams
      summary: Shows options for architecture diagram
      operationId: options-architecture
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
            - "$ref": "#/definitions/Options_Get_Collection"
            - "$ref": "#/definitions/Options_Post"
    get:
      tags:
      - Diagrams
      summary: Finds models of the type architecture
      description: This service supports query by using RSQL expressions
      operationId: get-architecture-models
      produces:
      - application/json
      parameters:
      - name: "$filter"
        in: query
        description: Filter models according to an RSQL expression
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ArchitecturalModel"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    post:
      tags:
      - Diagrams
      summary: Add a new model of the type architecture
      description: ''
      operationId: add-architecture-model
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Architecture Model object that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/ArchitecturalModel_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models
  "/diagrams/bpms":
    options:
      tags:
      - Diagrams
      summary: Shows options for BPM diagram
      operationId: options-bpm
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
            - "$ref": "#/definitions/Options_Get_Collection"
            - "$ref": "#/definitions/Options_Post"
    get:
      tags:
      - Diagrams
      summary: Finds models of the type bpm
      description: This service supports query by using RSQL expressions
      operationId: get-bpm-models
      produces:
      - application/json
      parameters:
      - name: "$filter"
        in: query
        description: Filter models according to an RSQL expression
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ArchitecturalModel"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    post:
      tags:
      - Diagrams
      summary: Add a new model of the type bpm
      description: ''
      operationId: add-bpm-model
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Bpm Model object that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/ArchitecturalModel_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models  
  "/diagrams/flowcharts":
    options:
      tags:
      - Diagrams
      summary: Shows options for flowcharts diagram
      operationId: options-flowcharts
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
            - "$ref": "#/definitions/Options_Get_Collection"
            - "$ref": "#/definitions/Options_Post"
    get:
      tags:
      - Diagrams
      summary: Finds models of the type flowchart
      description: This service supports query by using RSQL expressions
      operationId: get-flowchart-models
      produces:
      - application/json
      parameters:
      - name: "$filter"
        in: query
        description: Filter models according to an RSQL expression
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ArchitecturalModel"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    post:
      tags:
      - Diagrams
      summary: Add a new model of the type flowchart
      description: ''
      operationId: add-flowchart-model
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Flowchart Model object that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/ArchitecturalModel_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models  
  "/diagrams/gantts":
    options:
      tags:
      - Diagrams
      summary: Shows options for gantts diagram
      operationId: options-gantt
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
            - "$ref": "#/definitions/Options_Get_Collection"
            - "$ref": "#/definitions/Options_Post"
    get:
      tags:
      - Diagrams
      summary: Finds models of the type gantt
      description: This service supports query by using RSQL expressions
      operationId: get-gantt-models
      produces:
      - application/json
      parameters:
      - name: "$filter"
        in: query
        description: Filter models according to an RSQL expression
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ArchitecturalModel"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    post:
      tags:
      - Diagrams
      summary: Add a new model of the type gantt
      description: ''
      operationId: add-gantt-model
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Gantt Model object that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/ArchitecturalModel_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models  
  "/diagrams/sequences":
    options:
      tags:
      - Diagrams
      summary: Shows options for sequences diagram
      operationId: options-sequence
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
            - "$ref": "#/definitions/Options_Get_Collection"
            - "$ref": "#/definitions/Options_Post"
    get:
      tags:
      - Diagrams
      summary: Finds models of the type sequence
      description: This service supports query by using RSQL expressions
      operationId: get-sequence-models
      produces:
      - application/json
      parameters:
      - name: "$filter"
        in: query
        description: Filter models according to an RSQL expression
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ArchitecturalModel"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    post:
      tags:
      - Diagrams
      summary: Add a new model of the type sequence
      description: ''
      operationId: add-sequence-model
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Sequence Model object that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/ArchitecturalModel_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models  
securityDefinitions:
  openarchi_auth:
    type: oauth2
    authorizationUrl: https://@HOST@/oauth/dialog
    flow: implicit
    scopes:
      write:model: modify a model
      read:models: read your models
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:

  Options_Input_Item:
    type: object
    properties:
      input:
        type: object

  Options_Output_Item:
    type: object
    properties:
      output:
        type: object

  Options_Output_Collection_Item:
    type: object
    properties:
      output:
        type: array
        items:
          type: object

  Options_Get_Collection:
    description: Generic object to expose endpoint functionalitites
    properties:
      get:
        $ref: '#/definitions/Options_Output_Collection_Item'

  Options_Get:
    description: Generic object to expose endpoint functionalitites
    properties:
      get:
        $ref: '#/definitions/Options_Output_Item'

  Options_Post:
    description: Generic object to expose endpoint functionalitites
    properties:
      post:
        $ref: '#/definitions/Options_Input_Item'

  Options_Put:
    description: Generic object to expose endpoint functionalitites
    properties:
      put:
        $ref: '#/definitions/Options_Input_Item'

  Options_Patch:
    description: Generic object to expose endpoint functionalitites
    properties:
      patch:
        $ref: '#/definitions/Options_Input_Item'
      head:
        $ref: '#/definitions/Options_Output_Item'

  Options_Head:
    description: Generic object to expose endpoint functionalitites
    properties:
      head:
        $ref: '#/definitions/Options_Output_Item'

  Activity:
    description: Lane's activity
    type: object
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object

  Lane:
    description: Pool's lane
    type: object
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        activities:
          type: array
          description: Activities in the lane
          items:
            $ref: "#/definitions/Activity"

  Pool:
    description: BPM's pool
    type: object
    allOf:
    - $ref: "#/definitions/Item"
    - type: object
      properties:
        lanes:
          type: array
          description: Lanes in the pool
          items:
            $ref: "#/definitions/Lane"

  Gantt:
    description: Gantt
    type: object
    allOf:
    - $ref: "#/definitions/Item"
    - type: object
      properties:
        category:
          type: string
          description: Category
          enum:
          - ACTIVITY
          - START
          - END
        diagramStart:
          type: integer
          format: int32
          description: Start of the Gantt's activity
        diagramEnd:
          type: integer
          format: int32
          description: End of the Gantt's activity
        kind:
          type: string
          description: Type of model
          enum:
          - GANTT
      required:
      - category
      - kind
       
  Gantt_Create:
    description: Gantt
    type: object
    allOf:
    - $ref: "#/definitions/Item_Create"
    - type: object
      properties:
        category:
          type: string
          description: Category
          enum:
          - ACTIVITY
          - START
          - END
        diagramStart:
          type: integer
          format: int32
          description: Start of the Gantt's activity
        diagramEnd:
          type: integer
          format: int32
          description: End of the Gantt's activity
        kind:
          type: string
          description: Type of model
          enum:
          - GANTT
      required:
      - category
      - kind

  Sequence:
    description: Sequence
    type: object
    allOf:
    - $ref: "#/definitions/Item"
    - type: object
      properties:
        start:
          type: integer
          format: int32
          description: Start of the sequence's activity
        duration:
          type: integer
          format: int32
          description: Duration of the sequence's activity
        kind:
          type: string
          description: Type of model
          enum:
          - SEQUENCE_MODEL
      required:
      - kind
       
  Sequence_Create:
    description: Sequence
    type: object
    allOf:
    - $ref: "#/definitions/Item_Create"
    - type: object
      properties:
        start:
          type: integer
          format: int32
          description: Start of the sequence's activity
        duration:
          type: integer
          format: int32
          description: Duration of the sequence's activity
        kind:
          type: string
          description: Type of model
          enum:
          - SEQUENCE_MODEL
      required:
      - kind

  Flowchart:
    description: Flowchart
    type: object
    allOf:
    - $ref: "#/definitions/Item"
    - type: object
      properties:
        category:
          type: string
          description: Category
          enum:
          - ACTIVITY
          - DECISION_POINT
          - START
          - END
        kind:
          type: string
          description: Type of model
          enum:
          - FLOWCHART
      required:
      - category
      - kind
       
  Flowchart_Create:
    description: Flowchart
    type: object
    allOf:
    - $ref: "#/definitions/Item_Create"
    - type: object
      properties:
        category:
          type: string
          description: Category
          enum:
          - ACTIVITY
          - DECISION_POINT
          - START
          - END
        kind:
          type: string
          description: Type of model
          enum:
          - FLOWCHART
      required:
      - category
      - kind
      
  Activity_Create:
    description: Lane's activity
    type: object
    allOf:
    - $ref: "#/definitions/BaseEntity_Create"
    - type: object

  Lane_Create:
    description: Pool's lane
    type: object
    allOf:
    - $ref: "#/definitions/BaseEntity_Create"
    - type: object
      properties:
        activities:
          type: array
          description: Activities in the lane
          items:
            $ref: "#/definitions/Activity"

  Pool_Create:
    description: BPM's pool
    type: object
    allOf:
    - $ref: "#/definitions/Item_Create"
    - type: object
      properties:
        lanes:
          type: array
          description: Lanes in the pool
          items:
            $ref: "#/definitions/Lane_Create"

  StaticElement:
    description: Static element
    type: object
    allOf:
    - $ref: "#/definitions/Element"
    - type: object
      properties:
        kind:
          description: Type of static element
          type: string
          enum:
          - COMPONENT
      required:
      - kind

  StaticElement_Create:
    description: Static element
    type: object
    allOf:
    - $ref: "#/definitions/Element_Create"
    - type: object
      properties:
        kind:
          description: Type of static element
          type: string
          enum:
          - COMPONENT
      required:
      - kind

  Consumer:
    description: Consumer
    type: object
    allOf:
    - $ref: "#/definitions/StaticElement"
    - type: object
      properties:
        scope:
          description: Scope on which this customer is relevant
          type: string
          enum:
          - Internal
          - External
          - Unspecified

  SoftwareSystem:
    description: Software System
    type: object
    allOf:
    - $ref: "#/definitions/StaticElement"
    - type: object
      properties:
        scope:
          description: Scope on which this software system is relevant
          type: string
          enum:
          - Internal
          - External
          - Unspecified

  DeploymentNode:
    description: Deployment Node
    type: object
    allOf:
    - $ref: "#/definitions/Element"
    - type: object
      properties:
        technology:
          description: Technology
          type: string
        instances:
          description: Instances
          type: integer
          format: int32
        kind:
          type: string
          description: Type of element
          enum:
          - DEPLOYMENT

  Consumer_Create:
    description: Consumer
    type: object
    allOf:
    - $ref: "#/definitions/StaticElement_Create"
    - type: object
      properties:
        scope:
          description: Scope on which this customer is relevant
          type: string
          enum:
          - Internal
          - External
          - Unspecified

  SoftwareSystem_Create:
    description: Software System
    type: object
    allOf:
    - $ref: "#/definitions/StaticElement_Create"
    - type: object
      properties:
        scope:
          description: Scope on which this software system is relevant
          type: string
          enum:
          - Internal
          - External
          - Unspecified

  DeploymentNode_Create:
    description: Deployment Node
    type: object
    allOf:
    - $ref: "#/definitions/Element_Create"
    - type: object
      properties:
        technology:
          description: Technology
          type: string
        instances:
          description: Instances
          type: integer
          format: int32
        kind:
          type: string
          description: Type of element
          enum:
          - DEPLOYMENT

  Item:
    description: Abstract item object
    allOf:
    - $ref: "#/definitions/Taggable"
    - type: object
      properties:
        url:
          type: string
          description: Url for the physical access to the of model
        properties:
          type: object
          additionalProperties:
            type: string
        featuresLinks:
          type: array
          description: Links to the features that conforms the model
          items:
            $ref: "#/definitions/CompositeElement"

  Item_Create:
    description: Abstract item object
    allOf:
    - $ref: "#/definitions/Taggable_Create"
    - type: object
      properties:
        url:
          type: string
          description: Url for the physical access to the of model
        properties:
          type: object
          additionalProperties:
            type: string
        featuresLinks:
          type: array
          description: Links to the features that conforms the model
          items:
            $ref: "#/definitions/CompositeElement"

  Element_Create:
    description: Abstract element object
    allOf:
    - $ref: "#/definitions/Item_Create"
    - type: object
      properties:
        name:
          type: string
          description: Model name
        kind:
          type: string
          description: Type of element
          enum:
          - ARCHITECTURAL_MODEL
          - FLOWCHART_MODEL
          - SEQUENCE_MODEL
          - GANTT_MODEL
          - ENTITY_RELATIONSHIP_MODEL
          - UML_CLASS_MODEL
          - BPM_MODEL
          - ARCHITECTURAL
          - FLOWCHART
          - SEQUENCE
          - GANTT
          - ENTITY_RELATIONSHIP
          - UML_CLASS
          - FEATURE
          - BPM
        description:
          type: string
          description: Long description of model
        location:
          $ref: "#/definitions/Point"
          description: Long description of model
        parent:
          $ref: "#/definitions/CompositeElement"
          description: Long description of model
        children:
          type: array
          description: Children of the model
          items:
            $ref: "#/definitions/CompositeElement"
        shape:
          $ref: "#/definitions/Shape"
          description: Long description of model
        relationships:
          type: array
          description: Relationships of the model
          items:
            $ref: "#/definitions/Relationship_Create"
        metaData:
          $ref: "#/definitions/MetaData_Create"
          description: Meta data associated with the model
      discriminator: kind
      required:
      - name
      - kind

  Element:
    description: Abstract element object
    allOf:
    - $ref: "#/definitions/Item"
    - type: object
      properties:
        name:
          type: string
          description: Model name
        kind:
          type: string
          description: Type of element
          enum:
          - ARCHITECTURAL_MODEL
          - FLOWCHART_MODEL
          - SEQUENCE_MODEL
          - GANTT_MODEL
          - ENTITY_RELATIONSHIP_MODEL
          - UML_CLASS_MODEL
          - BPM_MODEL
          - ARCHITECTURAL
          - FLOWCHART
          - SEQUENCE
          - GANTT
          - ENTITY_RELATIONSHIP
          - UML_CLASS
          - FEATURE
          - BPM
        description:
          type: string
          description: Long description of model
        location:
          $ref: "#/definitions/Point"
          description: Long description of model
        parent:
          $ref: "#/definitions/CompositeElement"
          description: Long description of model
        children:
          type: array
          description: Children of the model
          items:
            $ref: "#/definitions/CompositeElement"
        shape:
          $ref: "#/definitions/Shape"
          description: Long description of model
        relationships:
          type: array
          description: Relationships of the model
          items:
            $ref: "#/definitions/Relationship"
        metaData:
          $ref: "#/definitions/MetaData"
          description: Meta data associated with the model
      discriminator: kind
      required:
      - name
      - kind

  ArchitecturalModel:
    description: Architectural Model object
    allOf:
    - $ref: "#/definitions/Element"
    - type: object
      properties:
        elements:
          type: object
          additionalProperties:
            $ref: "#/definitions/Element"
        kind:
          type: string
          description: Type of model
          enum:
          - ARCHITECTURAL_MODEL
        consumers:
          type: array
          description: Consumers of the model
          items:
            $ref: "#/definitions/Consumer"
        softwareSystems:
          type: array
          description: Consumers of the model
          items:
            $ref: "#/definitions/SoftwareSystem"
        deploymentNodes:
          type: array
          description: Deployment node of the model
          items:
            $ref: "#/definitions/DeploymentNode"
      required:
      - kind

  ArchitecturalModel_Create:
    description: Architectural Model object
    allOf:
    - $ref: "#/definitions/Element_Create"
    - type: object
      properties:
        elements:
          type: object
          additionalProperties:
            $ref: "#/definitions/Element_Create"
        kind:
          type: string
          description: Type of model
          enum:
          - ARCHITECTURAL_MODEL
        consumers:
          type: array
          description: Consumers of the model
          items:
            $ref: "#/definitions/Consumer_Create"
        softwareSystems:
          type: array
          description: Consumers of the model
          items:
            $ref: "#/definitions/SoftwareSystem_Create"
        deploymentNodes:
          type: array
          description: Deployment node of the model
          items:
            $ref: "#/definitions/DeploymentNode_Create"
      required:
      - kind

  BPMModel:
    description: BPM Model object
    allOf:
    - $ref: "#/definitions/Element"
    - type: object
      properties:
        kind:
          type: string
          description: Type of model
          enum:
          - BPM_MODEL
        pools:
          type: array
          description: Pools of the model
          items:
            $ref: "#/definitions/Pool"
      required:
      - kind

  BPMModel_Create:
    description: BPM Model object
    allOf:
    - $ref: "#/definitions/Element_Create"
    - type: object
      properties:
        kind:
          type: string
          description: Type of model
          enum:
          - BPM_MODEL
        pools:
          type: array
          description: Pools of the model
          items:
            $ref: "#/definitions/Pool_Create"
      required:
      - kind

  FlowchartModel:
    description: Flowchart Model object
    allOf:
    - $ref: "#/definitions/Element"
    - type: object
      properties:
        kind:
          type: string
          description: Type of model
          enum:
          - FLOWCHART_MODEL
        pools:
          type: array
          description: Pools of the model
          items:
            $ref: "#/definitions/Flowchart"
      required:
      - kind

  FlowchartModel_Create:
    description: Flowchart Model object
    allOf:
    - $ref: "#/definitions/Element_Create"
    - type: object
      properties:
        kind:
          type: string
          description: Type of model
          enum:
          - FLOWCHART_MODEL
        pools:
          type: array
          description: Pools of the model
          items:
            $ref: "#/definitions/Flowchart_Create"
      required:
      - kind
      
  GanttModel:
    description: Gantt Model object
    allOf:
    - $ref: "#/definitions/Element"
    - type: object
      properties:
        kind:
          type: string
          description: Type of model
          enum:
          - GANTT_MODEL
        pools:
          type: array
          description: Pools of the model
          items:
            $ref: "#/definitions/Gantt"
      required:
      - kind

  GanttModel_Create:
    description: Gantt Model object
    allOf:
    - $ref: "#/definitions/Element_Create"
    - type: object
      properties:
        kind:
          type: string
          description: Type of model
          enum:
          - GANTT_MODEL
        pools:
          type: array
          description: Pools of the model
          items:
            $ref: "#/definitions/Gantt_Create"
      required:
      - kind
      
  SequenceModel:
    description: Sequence Model object
    allOf:
    - $ref: "#/definitions/Element"
    - type: object
      properties:
        kind:
          type: string
          description: Type of model
          enum:
          - SEQUENCE_MODEL
        pools:
          type: array
          description: Pools of the model
          items:
            $ref: "#/definitions/Sequence"
      required:
      - kind

  SequenceModel_Create:
    description: Sequence Model object
    allOf:
    - $ref: "#/definitions/Element_Create"
    - type: object
      properties:
        kind:
          type: string
          description: Type of model
          enum:
          - SEQUENCE_MODEL
        pools:
          type: array
          description: Pools of the model
          items:
            $ref: "#/definitions/Sequence_Create"
      required:
      - kind
            
  Model:
    description: Model object
    type: object
    allOf:
    - $ref: "#/definitions/ArchitecturalModel"
    - $ref: "#/definitions/BPMModel"
    - $ref: "#/definitions/FlowchartModel"
    - $ref: "#/definitions/GanttModel"
    - $ref: "#/definitions/SequenceModel"

  Model_Create:
    description: Model object
    type: object
    allOf:
    - $ref: "#/definitions/ArchitecturalModel_Create"
    - $ref: "#/definitions/BPMModel_Create"
    - $ref: "#/definitions/FlowchartModel_Create"
    - $ref: "#/definitions/GanttModel_Create"
    - $ref: "#/definitions/SequenceModel_Create"

  Model_Parent_Create:
    description: A reference to a taggable element
    type: object
    properties:
      id:
        type: string
        description: Composite element identifier
      type:
        type: string
        description: Referenced element type
        enum:
        - ARCHITECTURAL_MODEL
        - FLOWCHART_MODEL
        - SEQUENCE_MODEL
        - GANTT_MODEL
        - ENTITY_RELATIONSHIP_MODEL
        - UML_CLASS_MODEL
        - BPM_MODEL
        - ARCHITECTURAL
        - FLOWCHART
        - SEQUENCE
        - GANTT
        - ENTITY_RELATIONSHIP
        - UML_CLASS
        - FEATURE
        - COMPONENT
        - CONTAINER
        - DEPLOYMENT
        - BPM

  Point:
    type: object
    description: Coordinates on which the model is located
    properties:
      x:
        type: string
        format: double
        description: Relative x coordinate of the point on which the model is located
      y:
        type: string
        format: double
        description: Relative y coordinate of the point on which the model is located
      z:
        type: string
        format: double
        description: Relative z coordinate of the point on which the model is located
    required:
    - x
    - y

  CompositeElement:
    type: object
    description: A reference to a taggable element
    properties:
      id:
        type: string
        description: Composite element identifier
      type:
        type: string
        description: Referenced element type
        enum:
        - ARCHITECTURAL_MODEL
        - FLOWCHART_MODEL
        - SEQUENCE_MODEL
        - GANTT_MODEL
        - ENTITY_RELATIONSHIP_MODEL
        - UML_CLASS_MODEL
        - BPM_MODEL
        - ARCHITECTURAL
        - FLOWCHART
        - SEQUENCE
        - GANTT
        - ENTITY_RELATIONSHIP
        - UML_CLASS
        - FEATURE
        - COMPONENT
        - CONTAINER
        - DEPLOYMENT
        - BPM
      link:
        type: string
        description: Link to the referenced element
    required:
    - id
    - type

  CompositeElement_Create:
    type: object
    description: A reference to a taggable element
    properties:
      id:
        type: string
        description: Composite element identifier
      type:
        type: string
        description: Referenced element type
        enum:
        - ARCHITECTURAL_MODEL
        - FLOWCHART_MODEL
        - SEQUENCE_MODEL
        - GANTT_MODEL
        - ENTITY_RELATIONSHIP_MODEL
        - UML_CLASS_MODEL
        - BPM_MODEL
        - ARCHITECTURAL
        - FLOWCHART
        - SEQUENCE
        - GANTT
        - ENTITY_RELATIONSHIP
        - UML_CLASS
        - FEATURE
        - COMPONENT
        - CONTAINER
        - DEPLOYMENT
        - BPM
      link:
        type: string
        description: Link to the referenced element
    required:
    - id
    - type

  Shape:
    type: object
    description: Concrete shape that univocally identify o model
    properties:
      id:
        type: string
        description: Shape identifier
      type:
        type: string
        description: Shape type
        enum:
        - PERSON
        - ROUNDED_BOX
        - BOX
        - DIAMOND
        - CIRCLE
    required:
    - id
    - type

  MetaData_Create:
    description: MetaData object
    allOf:
    - $ref: "#/definitions/BaseEntity_Create"
    - type: object
      properties:
        responsibles:
          type: array
          description: Responsibles of the model
          items:
            $ref: "#/definitions/Responsible_Create"
        collaborators:
          type: array
          description: Collaborators of the model
          items:
            $ref: "#/definitions/Responsible_Create"
        relatedWith:
          type: array
          description: Models related to the current model
          items:
            $ref: "#/definitions/Taggable_Create"
        usedIn:
          type: array
          description: Models used by the current model
          items:
            $ref: "#/definitions/Taggable_Create"
        views:
          type: array
          description: Accepted views for representing the model
          items:
            $ref: "#/definitions/View_Create"
      required:
      - id
      - type

  MetaData:
    description: MetaData object
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        responsibles:
          type: array
          description: Responsibles of the model
          items:
            $ref: "#/definitions/Responsible"
        collaborators:
          type: array
          description: Collaborators of the model
          items:
            $ref: "#/definitions/Responsible"
        relatedWith:
          type: array
          description: Models related to the current model
          items:
            $ref: "#/definitions/Taggable"
        usedIn:
          type: array
          description: Models used by the current model
          items:
            $ref: "#/definitions/Taggable"
        views:
          type: array
          description: Accepted views for representing the model
          items:
            $ref: "#/definitions/View"
      required:
      - id
      - type

  Taggable:
    description: Instantiable model
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        tags:
          type: array
          description: Tags of the model
          items:
            type: string
      required:
      - id

  Taggable_Create:
    description: Instantiable model
    allOf:
    - $ref: "#/definitions/BaseEntity_Create"
    - type: object
      properties:
        tags:
          type: array
          description: Tags of the model
          items:
            type: string

  BaseEntity:
    type: object
    description: Basic entity info for managing a model
    properties:
      id:
        type: string
        description: Model identifier
      meta:
        $ref: "#/definitions/MetaInfo"
        description: Meta info related to the model
    required:
    - id
    - meta

  BaseEntity_Create:
    type: object
    description: Basic entity info for managing a model
    properties:
      meta:
        $ref: "#/definitions/MetaInfo_Create"
        description: Meta info related to the model

  Relationship:
    description: Relationship between model objects
    allOf:
    - $ref: "#/definitions/Taggable"
    - type: object
      properties:
        source:
          $ref: "#/definitions/Taggable"
          description: Model acting as source of the relationship
        sourceId:
          type: string
          description: Long description of model
        destination:
          $ref: "#/definitions/Taggable"
          description: Model acting as destination of the relationship
        destinationId:
          type: string
          description: Identifier of the model acting as destination of the relationship
        description:
          type: string
          description: Long description of the relationship
        sourcePort:
          type: string
          description: Port of the model acting as source of the relationship
        destinationPort:
          type: string
          description: Port of the model acting as destination of the relationship
      required:
      - sourceId
      - destinationId

  Relationship_Create:
    type: object
    description: Relationship between model objects
    allOf:
    - $ref: "#/definitions/Taggable_Create"
    - properties:
        sourceId:
          type: string
          description: Identifier of the model acting as source of the relationship
        destinationId:
          type: string
          description: Identifier of the model acting as destination of the relationship
        description:
          type: string
          description: Long description of the relationship
        sourcePort:
          type: string
          description: Port of the model acting as source of the relationship
        destinationPort:
          type: string
          description: Port of the model acting as destination of the relationship
      required:
      - sourceId
      - destinationId

  Responsible:
    description: Person that is responsible of a specific component of a model
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        organizationUnit:
          type: string
          description: Organization unit to which the responsible belongs to
        responsible:
          $ref: "#/definitions/Person"
          description: Person that is responsible of a specific component of a model
      required:
      - organizationUnit
      - responsible

  Responsible_Create:
    description: Person that is responsible of a specific component of a model
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        organizationUnit:
          type: string
          description: Organization unit to which the responsible belongs to
        responsible:
          $ref: "#/definitions/Person_Create"
          description: Person that is responsible of a specific component of a model
      required:
      - organizationUnit
      - responsible

  Person:
    description: Person
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        names:
          type: string
          description: Names of the person
        lastNames:
          type: string
          description: Lastname(s) of the person
      required:
      - names
      - lastNames

  Person_Create:
    description: Person
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        names:
          type: string
          description: Names of the person
        lastNames:
          type: string
          description: Lastname(s) of the person
      required:
      - names
      - lastNames

  View:
    description: View of the model
    allOf:
    - $ref: "#/definitions/BaseEntity"
    - type: object
      properties:
        name:
          type: string
          description: Name of the view
      required:
      - name

  View_Create:
    description: View of the model
    allOf:
    - $ref: "#/definitions/BaseEntity_Create"
    - type: object
      properties:
        name:
          type: string
          description: Name of the view
      required:
      - name

  MetaInfo:
    type: object
    description: Meta info for any object
    properties:
      id:
        type: string
        description: Meta info identifier
      version:
        $ref: "#/definitions/Version"
        description: Version of the object
      createdBy:
        $ref: "#/definitions/Account"
        description: Account that creates the object
      modifiedBy:
        $ref: "#/definitions/Account"
        description: Account that modifies the object
      created:
        type: string
        format: date-time
        description: Full date of creation of the object
      modified:
        type: string
        format: date-time
        description: Full date of modification of the object
    required:
    - id
    - version
    - createdBy
    - modifiedBy

  MetaInfo_Create:
    type: object
    description: Meta info for any object
    properties:
      version:
        $ref: "#/definitions/Version_Create"
        description: Version of the object
      createdBy:
        $ref: "#/definitions/Account_Create"
        description: Account that creates the object
      modifiedBy:
        $ref: "#/definitions/Account_Create"
        description: Account that modifies the object
      created:
        type: string
        format: date-time
        description: Full date of creation of the object
      modified:
        type: string
        format: date-time
        description: Full date of modification of the object
    required:
    - version
    - createdBy

  Version:
    type: object
    description: Version
    properties:
      id:
        type: string
        description: Version identifier
      major:
        type: integer
        format: int32
        description: Major part of the version
      minor:
        type: integer
        format: int32
        description: Minor part of the version
      build:
        type: integer
        format: int32
        description: Build part of the version
    required:
    - id
    - major
    - minor
    - build

  Version_Create:
    type: object
    description: Version
    properties:
      major:
        type: integer
        format: int32
        description: Major part of the version
      minor:
        type: integer
        format: int32
        description: Minor part of the version
      build:
        type: integer
        format: int32
        description: Build part of the version
    required:
    - major
    - minor
    - build

  Account:
    description: Account
    type: object
    properties:
      id:
        type: string
        description: Account identifier
      email:
        type: string
        description: Email of the account
      login:
        type: string
        description: Login
      password:
        type: string
        description: Password of the account
      firstAccess:
        type: boolean
        description: Indicator for showing whether this is the first access to the account or not

  Account_Create:
    description: Account
    type: object
    properties:
      email:
        type: string
        description: Email of the account
      login:
        type: string
        description: Login
      password:
        type: string
        description: Password of the account