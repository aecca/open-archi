swagger: '2.0'
info:
  description: Operations can be done with OpenArchi models.
  version: 1.0.0
  title: OpenArchi API
  contact:
    email: alejandromanuel.mendez.aragua@bbva.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: "@HOST@"
basePath: "/open-archi/api"
tags:
- name: Models
  description: Set of functionalities related to model
schemes:
- http
- https
paths:
  "/models":
    options:
      tags:
      - Models
      summary: Shows options for models object
      operationId: options-models
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
            - "$ref": "#/definitions/Options_Get_Collection"
            - "$ref": "#/definitions/Options_Post"
    get:
      tags:
      - Models
      summary: Finds models
      description: This service supports query by using RSQL expressions
      operationId: get-models
      produces:
      - application/json
      parameters:
      - name: "$filter"
        in: query
        description: Filter models according to an RSQL expression
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Models"
        '400':
          description: Bad request
      security:
      - openarchi_auth:
        - read:models
    post:
      tags:
      - Models
      summary: Add a new model
      description: ''
      operationId: add-model
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Model object that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/Model_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
          schema:
            type: array
            items:
              "$ref": "#/definitions/Models"
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models
  "/models/batch":
    options:
      tags:
      - Models
      summary: Shows options for batch models objects processing
      operationId: options-models-batch
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Options_Post_Collection"
    post:
      tags:
      - Models
      summary: Add a list of models
      description: ''
      operationId: add-models
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: List of model objects that needs to be added
        required: true
        schema:
          "$ref": "#/definitions/Models_Create"
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
          schema:
            type: array
            items:
              "$ref": "#/definitions/Models_Create"
        '405':
          description: Invalid input
      security:
      - openarchi_auth:
        - write:model
        - read:models
  "/models/:model-id":
    options:
      tags:
      - Models
      summary: Shows options for a specific model object
      operationId: options-model
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Options_Get"
  "/models/{model-id}":
    get:
      tags:
      - Models
      summary: Find a model by ID
      description: Returns a single model
      operationId: get-model-by-id
      produces:
      - application/json
      parameters:
      - name: model-id
        in: path
        description: ID of the model to return
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Model"
        '400':
          description: Invalid ID supplied
        '404':
          description: Model not found
securityDefinitions:
  openarchi_auth:
    type: oauth2
    authorizationUrl: https://@HOST@/oauth/dialog
    flow: implicit
    scopes:
      write:model: modify a model
      read:models: read your models
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Architecture_Model:
    type: object
    description: Architecture Model object
    allOf:
    - $ref: "#/definitions/Element"
    - type: object
      properties:
        elements:
          type: object
          additionalProperties:
            $ref: "#/definitions/Element"
        kind:
          type: string
          description: Type of model
          enum:
          - ARCHITECTURAL_MODEL
        consumers:
          type: array
          description: Consumers of the model
          items:
            $ref: "#/definitions/Consumer"
        softwareSystems:
          type: array
          description: Consumers of the model
          items:
            $ref: "#/definitions/Software_System"
        deploymentNodes:
          type: array
          description: Deployment node of the model
          items:
            $ref: "#/definitions/Deployment_Node"
        relationships:
          type: array
          items:
            $ref: "#/definitions/Architecture_Relationship"
      required:
      - kind
  Architecture_Models:
    type: object
    description: Architecture Model object
    allOf:
    - $ref: "#/definitions/Elements"
    - type: object
      properties:
        kind:
          type: string
          description: Type of model
          enum:
          - ARCHITECTURAL_MODEL
        consumers:
          type: array
          description: Consumers of the model
          items:
            $ref: "#/definitions/Consumers"
        softwareSystems:
          type: array
          description: Consumers of the model
          items:
            $ref: "#/definitions/Software_Systems"
        deploymentNodes:
          type: array
          description: Deployment node of the model
          items:
            $ref: "#/definitions/Deployment_Nodes"
        relationships:
          type: array
          items:
            $ref: "#/definitions/Architecture_Relationships"
      required:
      - kind
  Architecture_Model_Create:
    type: object
  Architecture_Models_Create:
    type: object
  Architecture_Relationship:
    type: object
  Architecture_Relationships:
    type: object
  BPM_Model:
    type: object
  BPM_Models:
    type: object
  BPM_Model_Create:
    type: object
  BPM_Models_Create:
    type: object
  Consumer:
    type: object
    allOf:
    - $ref: "#/definitions/Static_Element"
    - type: object
      properties:
        scope:
          description: Scope on which this customer is relevant
          type: string
          enum:
          - Internal
          - External
          - Unspecified
        kind:
          type: string
          enum:
          - CONSUMER
  Consumers:
    type: object
    allOf:
    - $ref: "#/definitions/Static_Elements"
    - type: object
      properties:
        scope:
          description: Scope on which this customer is relevant
          type: string
          enum:
          - Internal
          - External
          - Unspecified
        kind:
          type: string
          enum:
          - CONSUMER
  Container:
    type: object
    description: Container
    properties:
      technology:
        type: string
        description: Technology that underlied this container
      components:
        type: array
        description: Components that conforms this container
        items:
          $ref: "#/definitions/Component"
  Containers:
    type: object
    description: List of containers
    properties:
      technology:
        type: string
        description: Technology that underlied this container
      components:
        type: array
        description: Components that conforms this container
        items:
          $ref: "#/definitions/Components"
  Component:
    description: Component
    type: object
    allOf:
    - $ref: "#/definitions/Static_Element"
    - type: object
      properties:
        technology:
          description: Technology
          type: string
        size:
          description: Components
          type: integer
          format: int64
  Components:
    description: Component
    type: object
    allOf:
    - $ref: "#/definitions/Static_Elements"
    - type: object
      properties:
        technology:
          description: Technology
          type: string
        size:
          description: Components
          type: integer
          format: int64
  Element:
    type: object
  Elements:
    type: object
  Deployment_Node:
    type: object
  Deployment_Nodes:
    type: object
  Flowchart_Model:
    type: object
  Flowchart_Models:
    type: object
  Flowchart_Model_Create:
    type: object
  Flowchart_Models_Create:
    type: object
  Gantt_Model:
    type: object
  Gantt_Models:
    type: object
  Gantt_Model_Create:
    type: object
  Gantt_Models_Create:
    type: object
  Model:
    description: Model object
    type: object
    allOf:
    - $ref: "#/definitions/Architecture_Model"
    - $ref: "#/definitions/BPM_Model"
    - $ref: "#/definitions/Flowchart_Model"
    - $ref: "#/definitions/Gantt_Model"
    - $ref: "#/definitions/Sequence_Model"
  Models:
    description: List of model objects
    type: object
    allOf:
    - $ref: "#/definitions/Architecture_Models"
    - $ref: "#/definitions/BPM_Models"
    - $ref: "#/definitions/Flowchart_Models"
    - $ref: "#/definitions/Gantt_Models"
    - $ref: "#/definitions/Sequence_Models"
  Model_Create:
    description: Model object to be created
    type: object
    allOf:
    - $ref: "#/definitions/Architecture_Model_Create"
    - $ref: "#/definitions/BPM_Model_Create"
    - $ref: "#/definitions/Flowchart_Model_Create"
    - $ref: "#/definitions/Gantt_Model_Create"
    - $ref: "#/definitions/Sequence_Model_Create"
  Models_Create:
    description: List of model objects to be created
    type: object
    allOf:
    - $ref: "#/definitions/Architecture_Models_Create"
    - $ref: "#/definitions/BPM_Models_Create"
    - $ref: "#/definitions/Flowchart_Models_Create"
    - $ref: "#/definitions/Gantt_Models_Create"
    - $ref: "#/definitions/Sequence_Models_Create"
  Options_Input_Item:
    type: object
    properties:
      input:
        type: object
  Options_Output_Item:
    type: object
    properties:
      output:
        type: object
  Options_Input_Collection_Item:
    type: object
    properties:
      output:
        type: array
        items:
          type: object
  Options_Output_Collection_Item:
    type: object
    properties:
      output:
        type: array
        items:
          type: object
  Options_Get_Collection:
    description: Generic object to expose endpoint functionalitites
    properties:
      get:
        $ref: '#/definitions/Options_Output_Collection_Item'
  Options_Get:
    description: Generic object to expose endpoint functionalitites
    properties:
      get:
        $ref: '#/definitions/Options_Output_Item'
  Options_Post:
    description: Generic object to expose endpoint functionalitites
    properties:
      post:
        $ref: '#/definitions/Options_Input_Item'
  Options_Post_Collection:
    description: Generic object to expose endpoint functionalitites for batching input processing
    properties:
      post:
        $ref: '#/definitions/Options_Input_Collection_Item'
  Options_Put:
    description: Generic object to expose endpoint functionalitites
    properties:
      put:
        $ref: '#/definitions/Options_Input_Item'
  Options_Patch:
    description: Generic object to expose endpoint functionalitites
    properties:
      patch:
        $ref: '#/definitions/Options_Input_Item'
      head:
        $ref: '#/definitions/Options_Output_Item'
  Options_Head:
    description: Generic object to expose endpoint functionalitites
    properties:
      head:
        $ref: '#/definitions/Options_Output_Item'
  Sequence_Model:
    type: object
  Sequence_Models:
    type: object
  Sequence_Model_Create:
    type: object
  Sequence_Models_Create:
    type: object
  Software_System:
    description: Software System
    type: object
    allOf:
    - $ref: "#/definitions/Static_Element"
    - type: object
      properties:
        scope:
          description: Scope on which this software system is relevant
          type: string
          enum:
          - Internal
          - External
          - Unspecified
        containers:
          description: Containers embeded in this software system
          type: array
          items:
            $ref: "#/definitions/Container"
  Software_Systems:
    description: Software System
    type: object
    allOf:
    - $ref: "#/definitions/Static_Elements"
    - type: object
      properties:
        scope:
          description: Scope on which this software system is relevant
          type: string
          enum:
          - Internal
          - External
          - Unspecified
        containers:
          description: Containers embeded in this software system
          type: array
          items:
            $ref: "#/definitions/Containers"
  Static_Element:
    type: object
    description: Static element
    allOf:
    - $ref: "#/definitions/Element"
    - type: object
      properties:
        kind:
          description: Type of static element
          type: string
          enum:
          - COMPONENT
      required:
      - kind
  Static_Elements:
    type: object
    description: Static element
    allOf:
    - $ref: "#/definitions/Elements"
    - type: object
      properties:
        kind:
          description: Type of static element
          type: string
          enum:
          - COMPONENT
      required:
      - kind