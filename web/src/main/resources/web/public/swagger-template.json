{
  "swagger": "2.0",
  "info": {
    "description": "Operations can be done with OpenArchi models.",
    "version": "1.0.0",
    "title": "OpenArchi API",
    "contact": {
      "email": "alejandromanuel.mendez.aragua@bbva.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "@HOST@",
  "basePath": "/api",
  "tags": [
    {
      "name": "models",
      "description": "Models"
    },
    {
      "name": "architecture",
      "description": "Architecture"
    },
    {
      "name": "diagrams",
      "description": "Diagrams"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/models": {
      "get": {
        "tags": [
          "models"
        ],
        "summary": "Finds models",
        "description": "This service supports query by using RSQL expressions",
        "operationId": "get-models",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter models according to an RSQL expression",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "openarchi_auth": [
              "read:models"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "models"
        ],
        "summary": "Add a new model",
        "description": "",
        "operationId": "add-model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Model object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Model_Create"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "200": {
            "description": "Accepted"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "openarchi_auth": [
              "write:model",
              "read:models"
            ]
          }
        ]
      }
    },
    "/models/{model-id}": {
      "get": {
        "tags": [
          "models"
        ],
        "summary": "Find a model by ID",
        "description": "Returns a single model",
        "operationId": "get-model-by-id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model-id",
            "in": "path",
            "description": "ID of the model to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Model not found"
          }
        },
        "security": [
          {
            "api_key": [
            ]
          }
        ]
      }
    },
    "/models/{model-id}/children": {
      "get": {
        "tags": [
          "models"
        ],
        "summary": "Find a model by ID",
        "description": "Returns a single model",
        "operationId": "get-model-by-id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model-id",
            "in": "path",
            "description": "ID of the model to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Model not found"
          }
        },
        "security": [
          {
            "api_key": [
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "models"
        ],
        "summary": "Add a new child to a model",
        "description": "",
        "operationId": "add-child",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Child object that needs to be added to the model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Model_Create"
            }
          }, {
            "name": "model-id",
            "in": "path",
            "description": "ID of the model whose child will belong",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "200": {
            "description": "Accepted"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "openarchi_auth": [
              "write:model",
              "read:models"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "openarchi_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://@HOST@/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:model": "modify a model",
        "read:models": "read your models"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Model": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "ARCHITECTURAL_MODEL",
            "FLOWCHART_MODEL",
            "SEQUENCE_MODEL",
            "GANTT_MODEL",
            "ENTITY_RELATIONSHIP_MODEL",
            "UML_CLASS_MODEL",
            "BPM_MODEL"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Model_Create": {
      "type": "object",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "ARCHITECTURAL_MODEL",
            "FLOWCHART_MODEL",
            "SEQUENCE_MODEL",
            "GANTT_MODEL",
            "ENTITY_RELATIONSHIP_MODEL",
            "UML_CLASS_MODEL",
            "BPM_MODEL",
            "ARCHITECTURAL",
            "FLOWCHART",
            "SEQUENCE",
            "GANTT",
            "ENTITY_RELATIONSHIP",
            "UML_CLASS",
            "FEATURE",
            "BPM"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
